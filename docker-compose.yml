version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: discussion_board_db
    environment:
      POSTGRES_DB: ${DB_NAME:-discussion_board}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: discussion_board_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-discussion_board}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_SSL: ${DB_SSL:-false}
      DB_POOL_MAX: ${DB_POOL_MAX:-10}
      DB_POOL_MIN: ${DB_POOL_MIN:-2}
      DB_POOL_ACQUIRE: ${DB_POOL_ACQUIRE:-30000}
      DB_POOL_IDLE: ${DB_POOL_IDLE:-10000}
      DB_STATEMENT_TIMEOUT: ${DB_STATEMENT_TIMEOUT:-30000}
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  postgres_data:

